#include<stdio.h>
// program excise 5:generate n*n magic squre
// by cj,17-09-2019
/* algorithm:1.made 1 in the middle grid of the first line.
             2.made other number in the upper  left grid of the front number;
             3.if the grid of step2 has been occupied,put it in the grid whose x=last front number'x,y=front number'y;
                
*/
const int maxn=200;
int squre[maxn][maxn];
int pei[maxn][2];
int n;
void fin(int *x,int *y,int d)
{
    int a=pei[d][0],b=pei[d][1];
    a=a-1;a=(a%n+n)%n;
    b=b-1;b=(b%n+n)%n;
    if(squre[a][b]==0){*x=a;*y=b;return;}
    else
    {
        a=pei[d-1][0];b=pei[d][1];
        *x=a;*y=b;return;
    }
}
void solve()
{
    int x,y,a,b;
    squre[0][n/2]=1;
    pei[1][0]=0;
    pei[1][1]=n/2;

    for(int i=2;i<=n*n;i++)
    {
        fin(&x,&y,i-1);
        //printf("i=%d x=%d y=%d\n",i,x,y);
        squre[x][y]=i;
        pei[i][0]=x;
        pei[i][1]=y;
    }
}
int main(void)
{
    int cas=0;
    while(1)
    {
        printf("Case %d:\n",++cas);

        printf("Enter the value of n:");
        scanf("%d",&n);
        if(n<=0||n%2==0){printf("Enter a odd number greater than 0\n\n");continue;}
        solve();
        for(int i=0;i<n;i++)
            for(int d=0;d<n;d++)printf("%2d%s",squre[i][d],d==n-1?"\n":" ");
            printf("\n");
    }
    return 0;
}
